grammar net.immute.ccs.CcsEclipse

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate ccsEclipse "http://www.immute.net/ccs/CcsEclipse"

RuleSet hidden(WS, ML_COMMENT, SL_COMMENT):
	(context = Context?)
	(rules += Rule)*
	;

Context:
	'@context' '(' selector=Selector ')' ';'?
;

Selector:
	sum=Sum '>'?
;

Sum: Product (',' Product)*;

Product: Term+;

Term: Step ('>' Step)*;

Step:
	SingleStep | '(' Sum ')'
;

Rule:
	(^import=Import | constraint=Constraint | property=Property | nested=Nested) ';'?
;

Nested:
	selector=Selector (
		(':' (^import=Import | constraint=Constraint | property=Property)) 
		| '{' (rules += Rule)* '}')
;


Modifier: (override ?= "@override");

Property:
	(modifiers+=Modifier*) name=ID '=' value=Value
;

terminal ID: ('a'..'z'|'A'..'Z'|'_'|'$')('a'..'z'|'A'..'Z'|'_'|'$'|'0'..'9')*;
// TODO interpolants
terminal STRING	: 
			'"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
			"'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
		; 
terminal ML_COMMENT: '/*' -> '*/';
terminal SL_COMMENT: '//' !('\n'|'\r')* ('\r'? '\n')?;

terminal WS: (' '|'\t'|'\r'|'\n')+;

terminal HEXINT returns ecore::EInt: '0x' ('0'..'9'|'a'..'f'|'A'..'F')+;
terminal NUMBER returns ecore::EBigDecimal:
    '-'? (('0'..'9')+ ('.' ('0'..'9')*)? | 
    '.' ('0'..'9')+) (('e' | 'E') ('+' | '-')? ('0'..'9')+)?;
terminal NUM_ID: ('-'|'+'|'0'..'9')('a'..'z'|'A'..'Z'|'_'|'$'|'.'|'0'..'9')*;
    
Boolean : 'true' | 'false';

Value:
	HEXINT
	| NUMBER
	| STRING
	| Boolean
	| ID
	| NUM_ID
;

Constraint:
	'@constrain' SingleStep
;

SingleStep:
	Ident Vals? StepSuffix?
;

Ident: ID | STRING;

Vals: '.' Ident Vals*;

StepSuffix: '/' SingleStep;

Import: '@import' name=STRING;

